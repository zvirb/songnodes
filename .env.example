# SongNodes Environment Configuration
# Copy this file to .env and fill in your actual values

# ===========================================
# DATABASE CONFIGURATION
# ===========================================
POSTGRES_PASSWORD=musicdb_secure_pass_2024
PGBOUNCER_ADMIN_PASSWORD=pgbouncer_admin_pass_change_me

# ===========================================
# RABBITMQ CONFIGURATION
# ===========================================
RABBITMQ_USER=musicdb
RABBITMQ_PASS=rabbitmq_secure_pass_2024

# ===========================================
# JWT & SECURITY
# ===========================================
JWT_SECRET=your_jwt_secret_here_change_me

# ===========================================
# METADATA ENRICHMENT API KEYS
# ===========================================

# IMPORTANT: External API keys for metadata enrichment (Spotify, Discogs, Last.fm, etc.)
# should be configured through the frontend Settings panel (⚙️ → API Keys tab).
# They are stored encrypted in the database for security.
#
# The variables below are OPTIONAL fallbacks only used if database keys are not configured.
# For production deployments, use the frontend settings UI instead of environment variables.

# Spotify Web API (Configure via Frontend Settings)
# Get credentials at: https://developer.spotify.com/dashboard
#SPOTIFY_CLIENT_ID=your_spotify_client_id_here
#SPOTIFY_CLIENT_SECRET=your_spotify_client_secret_here

# Tidal Music API (REQUIRED for OAuth - Backend Only)
# Get credentials at: https://developer.tidal.com/
# IMPORTANT: These credentials should NEVER be exposed to frontend
TIDAL_CLIENT_ID=your_tidal_client_id_here
TIDAL_CLIENT_SECRET=your_tidal_client_secret_here

# MusicBrainz User-Agent (Configure via Frontend Settings)
# Format: YourApp/Version (your-email@example.com)
#MUSICBRAINZ_USER_AGENT=SongNodes/1.0 (your-email@example.com)

# Discogs API (Configure via Frontend Settings)
# Get token at: https://www.discogs.com/settings/developers
#DISCOGS_TOKEN=your_discogs_personal_access_token_here

# Last.fm API (Configure via Frontend Settings)
# Get API key at: https://www.last.fm/api/account/create
#LASTFM_API_KEY=your_lastfm_api_key_here

# Beatport API (Configure via Frontend Settings)
#BEATPORT_API_KEY=your_beatport_key_if_available

# API Key Encryption Secret (REQUIRED for database encryption)
API_KEY_ENCRYPTION_SECRET=songnodes_change_in_production_2024

# ===========================================
# API RETRY CONFIGURATION
# ===========================================

# Exponential backoff retry settings for metadata enrichment APIs
# These settings control how the service handles API failures and rate limits

# Maximum number of retry attempts before giving up
# Default: 5 (total attempts = 1 initial + 5 retries = 6)
API_MAX_RETRIES=5

# Initial delay multiplier for exponential backoff (seconds)
# Wait time formula: (2^retry_count) * initial_delay + jitter
# Default: 1.0 (retry 1 = ~2s, retry 2 = ~4s, retry 3 = ~8s)
API_INITIAL_DELAY=1.0

# Maximum delay cap to prevent excessive waits (seconds)
# Prevents exponential backoff from growing too large
# Also caps Retry-After header values from rate limit responses
# Default: 60.0 (1 minute maximum wait between retries)
API_MAX_DELAY=60.0

# ===========================================
# SCRAPER API KEYS
# ===========================================

# IMPORTANT: Scraper API keys (Setlist.fm, Reddit, YouTube) should also be configured
# through the frontend Settings panel (⚙️ → API Keys tab) for secure encrypted storage.
# The variables below are OPTIONAL fallbacks only.

# 1001tracklists Login Credentials (Required for authenticated scraping)
# Sign up at: https://www.1001tracklists.com/register.php
TRACKLISTS_1001_USERNAME=your_1001tracklists_username_here
TRACKLISTS_1001_PASSWORD=your_1001tracklists_password_here
# Set to True for headless mode (background), False to see browser (useful for debugging/CAPTCHA)
TRACKLISTS_1001_HEADLESS=False

# Setlist.fm API (Configure via Frontend Settings)
# Get key at: https://api.setlist.fm/docs/1.0/index.html
#SETLISTFM_API_KEY=your_setlistfm_api_key_here

# Reddit API (Configure via Frontend Settings)
# Get credentials at: https://www.reddit.com/prefs/apps
# REQUIRED for reddit_monitor spider (Tier 3 community tracking)
#REDDIT_CLIENT_ID=your_reddit_client_id_here
#REDDIT_CLIENT_SECRET=your_reddit_client_secret_here
#REDDIT_USER_AGENT=SongNodes/2.0 Music Discovery Bot (by /u/your_username)

# ===========================================
# CAPTCHA SOLVING CONFIGURATION
# ===========================================

# CAPTCHA Solving Backend
# RECOMMENDED: Use FREE self-hosted Ollama (no cost, privacy-preserving)
# LEGACY: Paid services available but deprecated (2Captcha, Anti-Captcha)
CAPTCHA_ENABLED=false  # Set to true to enable CAPTCHA solving
CAPTCHA_BACKEND=ollama  # Options: 'ollama' (FREE, recommended), '2captcha', 'anticaptcha'

# Ollama Configuration (FREE, Self-Hosted)
# Requires: Ollama running with vision model (llama3.2-vision:11b)
# Cost: $0 (FREE)
# Accuracy: ~60-80%
# Privacy: 100% local processing, no external API calls
OLLAMA_URL=http://ollama:11434  # Auto-detected in Docker
CAPTCHA_MIN_CONFIDENCE=0.6  # Minimum confidence threshold (0.0-1.0)

# To install vision model: docker exec ollama-ai ollama pull llama3.2-vision:11b

# ===========================================
# LEGACY PAID CAPTCHA SERVICES (DEPRECATED)
# ===========================================
# The following paid services are DEPRECATED and kept for backward compatibility only.
# Switch to FREE Ollama backend above instead.

# 2Captcha API Key (DEPRECATED - Use Ollama instead)
# Get at: https://2captcha.com/
# Pricing: $0.001-$0.003 per solve (adds up quickly!)
#CAPTCHA_2CAPTCHA_API_KEY=your_2captcha_api_key_here

# Anti-Captcha API Key (DEPRECATED - Use Ollama instead)
# Get at: https://anti-captcha.com/
# Pricing: Similar to 2Captcha (~$0.002 per solve)
#CAPTCHA_ANTICAPTCHA_API_KEY=your_anticaptcha_api_key_here

# Legacy Configuration (only if using paid backends)
#CAPTCHA_FALLBACK_PROVIDER=anticaptcha
#CAPTCHA_BUDGET_LIMIT=100.00
#CAPTCHA_MAX_DAILY_BUDGET=100.00

# Common Settings (all backends)
CAPTCHA_MAX_RETRIES=3
CAPTCHA_TIMEOUT=120

# ===========================================
# MONITORING & OBSERVABILITY
# ===========================================

# Grafana
GRAFANA_USER=admin
GRAFANA_PASSWORD=admin_change_me

# ===========================================
# OBJECT STORAGE (MinIO)
# ===========================================
MINIO_ROOT_USER=minioadmin
MINIO_ROOT_PASSWORD=minioadmin_change_me

# ===========================================
# FRONTEND CONFIGURATION
# ===========================================
VITE_API_URL=http://localhost:8080
VITE_VISUALIZATION_API_URL=http://localhost:8084
VITE_WS_URL=ws://localhost:8083

# ===========================================
# OPTIONAL CONFIGURATIONS
# ===========================================

# Enable GraphQL Playground (development only)
ENABLE_PLAYGROUND=false

# Node Environment
NODE_ENV=production