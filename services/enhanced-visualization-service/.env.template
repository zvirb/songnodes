# Enhanced Visualization Service - Environment Configuration Template
# SECURITY: Never commit the actual .env file to version control
# Copy this to .env and fill in your actual values

# =============================================================================
# CRITICAL SECURITY CONFIGURATION
# =============================================================================

# JWT Authentication Secret - REQUIRED
# Generate with: openssl rand -base64 64
# Must be at least 32 characters, cryptographically secure
JWT_SECRET=GENERATE_SECURE_SECRET_HERE_MIN_32_CHARS

# JWT Configuration
JWT_EXPIRES_IN=24h
JWT_ISSUER=songnodes-enhanced-visualization

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# Option 1: Full connection URL (recommended for production)
# DATABASE_URL=postgresql://username:password@host:port/database?sslmode=require

# Option 2: Individual connection parameters
DB_HOST=db-connection-pool
DB_PORT=6432
DB_NAME=musicdb
DB_USER=REQUIRED_SET_USERNAME
DB_PASSWORD=REQUIRED_SET_SECURE_PASSWORD

# Database SSL Configuration (REQUIRED for production)
DB_SSL=true
DB_SSL_REJECT_UNAUTHORIZED=true
# DB_SSL_CA=path/to/ca-certificate.crt
# DB_SSL_CERT=path/to/client-certificate.crt
# DB_SSL_KEY=path/to/client-private-key.key

# Database Connection Pool Settings
DB_POOL_MAX=20
DB_POOL_MIN=5
DB_TIMEOUT=30000
DB_IDLE_TIMEOUT=30000

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================

REDIS_HOST=redis
REDIS_PORT=6379
# REDIS_PASSWORD=REQUIRED_IN_PRODUCTION
REDIS_DB=0
REDIS_KEY_PREFIX=evs:

# Redis SSL/TLS Configuration
REDIS_TLS=false
REDIS_TLS_REJECT_UNAUTHORIZED=true

# Redis Connection Settings
REDIS_MAX_RETRIES=3
REDIS_RETRY_DELAY=100
REDIS_CONNECT_TIMEOUT=10000
REDIS_COMMAND_TIMEOUT=5000

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================

# Application Environment
NODE_ENV=development
PORT=8085
HOST=0.0.0.0

# Logging Configuration
LOG_LEVEL=info

# =============================================================================
# WEBSOCKET CONFIGURATION
# =============================================================================

WS_HEARTBEAT_INTERVAL=30000
WS_MAX_CONNECTIONS=10000
WS_MAX_MESSAGE_SIZE=1048576
WS_AUTH_REQUIRED=true

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# CORS Origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,https://app.songnodes.com

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX=100

# Session Configuration
SESSION_TIMEOUT=1800000

# Data Encryption (optional, for sensitive data at rest)
# Generate with: openssl rand -base64 32
# ENCRYPTION_KEY=GENERATE_SECURE_ENCRYPTION_KEY_HERE

# =============================================================================
# FEATURE FLAGS
# =============================================================================

FEATURE_REALTIME=true
FEATURE_ADVANCED_LAYOUTS=true
FEATURE_ML_RECOMMENDATIONS=false

# =============================================================================
# PERFORMANCE AND MONITORING
# =============================================================================

ENABLE_METRICS=true
ENABLE_PROFILING=false

# =============================================================================
# PRODUCTION-SPECIFIC SETTINGS
# =============================================================================

# SSL/HTTPS Configuration (production only)
# HTTPS=true
# SSL_CERT=path/to/ssl-certificate.crt
# SSL_KEY=path/to/ssl-private-key.key

# Health Check Configuration
# HEALTH_CHECK_ENDPOINT=/health
# HEALTH_CHECK_TOKEN=secure_health_check_token

# =============================================================================
# DEVELOPMENT-SPECIFIC SETTINGS
# =============================================================================

# Development Database (if different from production)
# DEV_DATABASE_URL=postgresql://dev_user:dev_pass@localhost:5432/musicdb_dev

# Debug Settings (development only)
# DEBUG=true
# VERBOSE_LOGGING=true

# =============================================================================
# SECURITY NOTES AND BEST PRACTICES
# =============================================================================

# 1. NEVER use default passwords in any environment
# 2. ALWAYS use SSL/TLS in production (DB_SSL=true, REDIS_TLS=true)
# 3. ALWAYS set strong passwords (minimum 12 characters, mixed case, numbers, symbols)
# 4. ROTATE secrets regularly (especially JWT_SECRET)
# 5. USE environment-specific values (different secrets for dev/staging/prod)
# 6. LIMIT CORS origins to only trusted domains
# 7. ENABLE rate limiting and authentication in production
# 8. MONITOR logs for authentication failures and suspicious activity
# 9. USE secure secret storage (AWS Secrets Manager, Azure Key Vault, etc.) in production
# 10. NEVER log or expose secret values in application code

# =============================================================================
# SECRET GENERATION COMMANDS
# =============================================================================

# Generate JWT Secret (64 chars):
# openssl rand -base64 64

# Generate Encryption Key (32 chars):
# openssl rand -base64 32

# Generate Random Password (16 chars):
# openssl rand -base64 16

# Generate UUID:
# uuidgen