# Docker Compose configuration for Enhanced Visualization Service with full monitoring stack
version: '3.8'

services:
  # Enhanced Visualization Service
  enhanced-visualization-service:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: enhanced-visualization-service
    restart: unless-stopped
    ports:
      - "8085:8085"
    environment:
      # Application configuration
      NODE_ENV: production
      PORT: 8085
      HOST: 0.0.0.0
      
      # Database configuration
      DB_HOST: postgres
      DB_PORT: 6433  # PgBouncer port
      DB_NAME: musicdb
      DB_USER: musicdb_user
      DB_PASSWORD: musicdb_secure_pass
      DB_SSL: false
      
      # Redis configuration
      REDIS_HOST: redis
      REDIS_PORT: 6380
      REDIS_DB: 0
      
      # Elasticsearch configuration for logging
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: changeme
      ELASTICSEARCH_TLS_REJECT_UNAUTHORIZED: false
      
      # Service configuration
      SERVICE_VERSION: 1.0.0
      HOSTNAME: enhanced-visualization-service
      
      # Feature flags
      ENABLE_METRICS: true
      ENABLE_PROFILING: false
      FEATURE_REALTIME: true
      FEATURE_ADVANCED_LAYOUTS: true
      FEATURE_ML_RECOMMENDATIONS: false
      
      # Logging configuration
      LOG_LEVEL: info
    volumes:
      - ./logs:/app/logs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - songnodes-network
      - monitoring-network
    depends_on:
      - postgres
      - redis
      - elasticsearch
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  # Filebeat for log collection
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.12.0
    container_name: enhanced-viz-filebeat
    restart: unless-stopped
    user: root
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./logs:/app/logs:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - filebeat-data:/usr/share/filebeat/data
    environment:
      - ELASTICSEARCH_HOSTS=elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=changeme
      - ENV=production
      - SERVICE_VERSION=1.0.0
    networks:
      - monitoring-network
    depends_on:
      - elasticsearch
      - enhanced-visualization-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5066/stats"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Elasticsearch (if not already running)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    container_name: elasticsearch
    restart: unless-stopped
    environment:
      - node.name=elasticsearch
      - cluster.name=enhanced-viz-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
      - ./monitoring/elasticsearch:/usr/share/elasticsearch/config/pipelines:ro
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - monitoring-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'

  # Kibana for log visualization
  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.0
    container_name: kibana
    restart: unless-stopped
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - SERVER_NAME=kibana
      - SERVER_HOST=0.0.0.0
    volumes:
      - kibana-data:/usr/share/kibana/data
    networks:
      - monitoring-network
    depends_on:
      - elasticsearch
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5601/api/status"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # MetricBeat for system metrics (optional)
  metricbeat:
    image: docker.elastic.co/beats/metricbeat:8.12.0
    container_name: enhanced-viz-metricbeat
    restart: unless-stopped
    user: root
    volumes:
      - /proc:/hostfs/proc:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /:/hostfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - metricbeat-data:/usr/share/metricbeat/data
    environment:
      - ELASTICSEARCH_HOSTS=elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=changeme
    networks:
      - monitoring-network
    depends_on:
      - elasticsearch
    command: >
      metricbeat -e
      -E system.hostfs=/hostfs
      -E output.elasticsearch.hosts=["elasticsearch:9200"]
      -E setup.kibana.host="kibana:5601"
      -E setup.dashboards.enabled=true
      -E setup.template.enabled=true

networks:
  songnodes-network:
    external: true
  monitoring-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  elasticsearch-data:
    driver: local
  kibana-data:
    driver: local
  filebeat-data:
    driver: local
  metricbeat-data:
    driver: local