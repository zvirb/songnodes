# PgBouncer Configuration for MusicDB
# Optimized for high-throughput music data processing

[databases]
musicdb = host=postgres port=5432 dbname=musicdb user=musicdb_user
musicdb_readonly = host=postgres port=5432 dbname=musicdb user=musicdb_readonly

[pgbouncer]
# Connection pooling mode
pool_mode = transaction

# Listen configuration
listen_addr = 0.0.0.0
listen_port = 6432

# Authentication
auth_type = md5
auth_file = /etc/pgbouncer/userlist.txt

# Connection limits - Optimized for high-concurrency microservices
max_client_conn = 5000
default_pool_size = 50
min_pool_size = 10
reserve_pool_size = 20
reserve_pool_timeout = 3

# Server connection limits - Increased for microservices architecture
max_db_connections = 120
max_user_connections = 120

# Connection lifecycle - Optimized for connection recycling
server_lifetime = 1800
server_idle_timeout = 300
server_connect_timeout = 10
server_login_retry = 10
server_round_robin = 1

# Client connection management
client_idle_timeout = 0
client_login_timeout = 60

# Query limits - Adjusted for better throughput
query_timeout = 120
query_wait_timeout = 60
max_packet_size = 67108864

# Admin interface
admin_users = pgbouncer
stats_users = pgbouncer, musicdb_user

# Performance tuning - Enhanced for connection recycling
server_reset_query = DISCARD ALL
server_reset_query_always = 1
server_check_query = SELECT 1
server_check_delay = 20
application_name_add_host = 1
tcp_keepalive = 1
tcp_keepcnt = 3
tcp_keepidle = 900
tcp_keepintvl = 75

# Logging
log_connections = 1
log_disconnections = 1
log_pooler_errors = 1

# Process management
pidfile = /var/run/pgbouncer/pgbouncer.pid
unix_socket_dir = /var/run/pgbouncer