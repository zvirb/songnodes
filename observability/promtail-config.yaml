server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Docker container logs
  - job_name: containers
    static_configs:
      - targets:
          - localhost
        labels:
          job: containerlogs
          __path__: /var/lib/docker/containers/*/*log
    pipeline_stages:
      - json:
          expressions:
            output: log
            stream: stream
            attrs:
      - json:
          expressions:
            tag:
          source: attrs
      - regex:
          expression: (?P<container_name>(?:[^|]*))\|(?P<image_name>(?:[^|]*))\|(?P<image_id>(?:[^|]*))\|(?P<container_id>(?:[^|]*))
          source: tag
      - timestamp:
          format: RFC3339Nano
          source: time
      - labels:
          stream:
          container_name:
          image_name:
          image_id:
          container_id:
      - output:
          source: output

  # SongNodes application logs
  - job_name: songnodes_logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: songnodes
          __path__: /var/log/songnodes/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            service: service
            message: message
            trace_id: trace_id
            span_id: span_id
            user_id: user_id
            operation: operation
            duration_ms: duration_ms
            error: error
            metadata: metadata
      - timestamp:
          format: RFC3339
          source: timestamp
      - labels:
          level:
          service:
          trace_id:
          span_id:
          operation:

  # Scraper logs specifically
  - job_name: scrapers
    static_configs:
      - targets:
          - localhost
        labels:
          job: scrapers
          __path__: /var/log/songnodes/scrapers/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            service: service
            scraper_name: scraper_name
            target_url: target_url
            status_code: status_code
            response_time_ms: response_time_ms
            tracks_found: tracks_found
            error: error
            llm_used: llm_used
            selector_adaptation: selector_adaptation
            trace_id: trace_id
            span_id: span_id
      - timestamp:
          format: RFC3339
          source: timestamp
      - labels:
          level:
          service:
          scraper_name:
          status_code:
          llm_used:
          trace_id:

  # Database pipeline logs
  - job_name: database_pipeline
    static_configs:
      - targets:
          - localhost
        labels:
          job: database_pipeline
          __path__: /var/log/songnodes/database/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            service: service
            operation: operation
            table_name: table_name
            rows_affected: rows_affected
            query_time_ms: query_time_ms
            error: error
            trace_id: trace_id
            span_id: span_id
      - timestamp:
          format: RFC3339
          source: timestamp
      - labels:
          level:
          service:
          operation:
          table_name:
          trace_id:

  # API logs
  - job_name: api_services
    static_configs:
      - targets:
          - localhost
        labels:
          job: api_services
          __path__: /var/log/songnodes/api/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            service: service
            method: method
            endpoint: endpoint
            status_code: status_code
            response_time_ms: response_time_ms
            user_id: user_id
            trace_id: trace_id
            span_id: span_id
            error: error
      - timestamp:
          format: RFC3339
          source: timestamp
      - labels:
          level:
          service:
          method:
          endpoint:
          status_code:
          trace_id:

  # System logs
  - job_name: system
    static_configs:
      - targets:
          - localhost
        labels:
          job: system
          __path__: /var/log/{syslog,messages,kern.log,auth.log}
    pipeline_stages:
      - regex:
          expression: "^(?P<timestamp>\\w+\\s+\\d+\\s+\\d+:\\d+:\\d+)\\s+(?P<hostname>\\w+)\\s+(?P<service>\\w+)(\\[(?P<pid>\\d+)\\])?:\\s*(?P<message>.*)$"
      - timestamp:
          format: "Jan 02 15:04:05"
          source: timestamp
      - labels:
          hostname:
          service:
          pid:

limits_config:
  readline_rate: 10000
  readline_burst: 20000