# Loki LogQL Saved Queries for Enrichment Pipeline Troubleshooting
# These queries help diagnose common issues with the enrichment infrastructure

saved_queries:
  # ========================================================================
  # DLQ TROUBLESHOOTING
  # ========================================================================

  - name: "DLQ Failures by Error Type"
    description: "Count DLQ messages grouped by error type over time"
    query: |
      {service="dlq-manager"}
      | json
      | error_type!=""
      | __error__=""
      | line_format "{{.timestamp}} [{{.error_type}}] {{.message}}"
      | label_format level=error

  - name: "DLQ Recent Failures with Context"
    description: "Show recent DLQ failures with full context (last 1 hour)"
    query: |
      {service="dlq-manager"}
      | json
      | error_type!=""
      | line_format "{{.timestamp}} ERROR: {{.error_type}}\nTrack: {{.track_artist}} - {{.track_title}}\nProvider: {{.provider}}\nDetails: {{.error_message}}\n"

  - name: "DLQ Replay Attempts"
    description: "Monitor DLQ replay operations and their outcomes"
    query: |
      {service="dlq-manager"}
      |~ "replay"
      | json
      | line_format "{{.timestamp}} Replay {{.replay_status}}: {{.message_id}} (attempt {{.attempt}})"

  - name: "DLQ High Volume Alert Pattern"
    description: "Track when DLQ receives bursts of messages"
    query: |
      {service="dlq-manager"}
      | json
      | action="message_published"
      | count_over_time($__interval)

  # ========================================================================
  # CIRCUIT BREAKER AND RESILIENCE
  # ========================================================================

  - name: "Circuit Breaker State Changes"
    description: "Track circuit breaker state transitions"
    query: |
      {service="api-gateway-internal"}
      | json
      | circuit_breaker_state!=""
      | line_format "{{.timestamp}} {{.provider}}: {{.circuit_breaker_old_state}} → {{.circuit_breaker_state}} (failures: {{.failure_count}})"

  - name: "Circuit Breaker Open Events"
    description: "Show when and why circuit breakers open"
    query: |
      {service="api-gateway-internal"}
      | json
      | circuit_breaker_state="open"
      | line_format "{{.timestamp}} ⚠ {{.provider}} circuit OPENED\nReason: {{.reason}}\nFailures: {{.failure_count}}/{{.threshold}}\nError: {{.last_error}}"

  - name: "Rate Limiter Token Depletion"
    description: "Track when rate limit tokens run low"
    query: |
      {service="api-gateway-internal"}
      | json
      | tokens_available < 5
      | line_format "{{.timestamp}} {{.provider}} tokens low: {{.tokens_available}}/{{.capacity}}"

  # ========================================================================
  # ENRICHMENT WATERFALL DECISIONS
  # ========================================================================

  - name: "Waterfall Provider Selection"
    description: "See which provider won enrichment for each field"
    query: |
      {service="metadata-enrichment"}
      |= "waterfall"
      | json
      | field!="" and provider!="" and confidence!=""
      | line_format "{{.timestamp}} {{.field}}: {{.provider}} (confidence: {{.confidence}})"

  - name: "Waterfall Fallback Chain"
    description: "Track full fallback chains when primary providers fail"
    query: |
      {service="metadata-enrichment"}
      |= "fallback"
      | json
      | line_format "{{.timestamp}} {{.field}}: {{.from_provider}} failed → trying {{.to_provider}}\nReason: {{.fallback_reason}}"

  - name: "Waterfall Field Enrichment Summary"
    description: "Aggregate view of which fields got enriched"
    query: |
      {service="metadata-enrichment"}
      |= "enriched"
      | json
      | fields_enriched!=""
      | line_format "{{.timestamp}} Enriched {{.fields_enriched}} fields for track {{.track_id}}"

  - name: "Waterfall Complete Failures"
    description: "Fields that failed enrichment from all providers"
    query: |
      {service="metadata-enrichment"}
      |~ "enrichment.*fail"
      | json
      | all_providers_failed="true"
      | line_format "{{.timestamp}} ❌ {{.field}} FAILED from all providers\nTrack: {{.track_artist}} - {{.track_title}}\nAttempted: {{.providers_tried}}"

  # ========================================================================
  # MEDALLION ARCHITECTURE FLOW
  # ========================================================================

  - name: "Bronze Layer Ingestion"
    description: "Track raw data ingestion into Bronze layer"
    query: |
      {service=~"scraper-.*"}
      |= "bronze"
      | json
      | action="ingested"
      | line_format "{{.timestamp}} Bronze ← {{.source}}: {{.artist}} - {{.title}}"

  - name: "Bronze to Silver Promotion"
    description: "Monitor enrichment from Bronze to Silver"
    query: |
      {service="metadata-enrichment"}
      |= "silver"
      | json
      | action="promoted"
      | line_format "{{.timestamp}} Bronze {{.bronze_id}} → Silver (quality: {{.data_quality_score}})"

  - name: "Silver to Gold Materialization"
    description: "Track analytics materialization to Gold layer"
    query: |
      {service="metadata-enrichment"}
      |= "gold"
      | json
      | action="materialized"
      | line_format "{{.timestamp}} Silver {{.silver_id}} → Gold {{.gold_id}}"

  - name: "Data Quality Issues"
    description: "Find records with low data quality scores"
    query: |
      {service="metadata-enrichment"}
      | json
      | data_quality_score < 0.6
      | line_format "{{.timestamp}} ⚠ Low quality ({{.data_quality_score}}): {{.track_artist}} - {{.track_title}}\nMissing: {{.missing_fields}}"

  # ========================================================================
  # API PROVIDER ERRORS
  # ========================================================================

  - name: "Spotify API Errors"
    description: "All Spotify API errors with details"
    query: |
      {service=~"api-gateway-internal|metadata-enrichment"}
      | json
      | provider="spotify"
      | status=~"error|failed"
      | line_format "{{.timestamp}} Spotify Error: {{.error_type}}\nHTTP {{.http_status}}: {{.error_message}}\nEndpoint: {{.endpoint}}"

  - name: "MusicBrainz Rate Limiting"
    description: "Track MusicBrainz rate limit events"
    query: |
      {service=~"api-gateway-internal|metadata-enrichment"}
      | json
      | provider="musicbrainz"
      | status="rate_limited"
      | line_format "{{.timestamp}} MusicBrainz rate limited (retry after {{.retry_after}}s)"

  - name: "Provider Timeout Errors"
    description: "API calls that timed out"
    query: |
      {service="api-gateway-internal"}
      | json
      | error_type="timeout"
      | line_format "{{.timestamp}} {{.provider}} timeout after {{.duration}}s\nEndpoint: {{.endpoint}}\nTrack: {{.track_id}}"

  - name: "Failed Enrichments (Non-DLQ)"
    description: "Enrichment failures before DLQ (transient errors)"
    query: |
      {service=~"metadata-enrichment|scraper-.*"}
      |~ "enrichment.*fail"
      | json
      | dlq_published!="true"
      | line_format "{{.timestamp}} Enrichment failed (retry {{.retry_count}}): {{.error_message}}"

  # ========================================================================
  # CONFIGURATION AND SYSTEM HEALTH
  # ========================================================================

  - name: "Configuration Reload Events"
    description: "Track enrichment configuration reloads"
    query: |
      {service="metadata-enrichment"}
      |= "configuration"
      | json
      | action=~"reload|updated"
      | line_format "{{.timestamp}} Config {{.action}}: {{.config_source}}\nChanges: {{.changes}}"

  - name: "Service Startup and Health"
    description: "Monitor service initialization and health checks"
    query: |
      {service=~"metadata-enrichment|api-gateway-internal|dlq-manager"}
      | json
      | level=~"info|warning"
      | message=~"start|health|ready"
      | line_format "{{.timestamp}} [{{.service}}] {{.message}}"

  - name: "Resource Exhaustion Warnings"
    description: "Connection pool, memory, or other resource issues"
    query: |
      {service=~".*"}
      | json
      | level="warning"
      | message=~"pool|memory|connection|timeout"
      | line_format "{{.timestamp}} [{{.service}}] ⚠ {{.message}}"

  # ========================================================================
  # PERFORMANCE ANALYSIS
  # ========================================================================

  - name: "Slow Enrichment Operations"
    description: "Enrichment operations taking longer than expected"
    query: |
      {service="metadata-enrichment"}
      | json
      | duration > 5
      | line_format "{{.timestamp}} Slow enrichment ({{.duration}}s): {{.track_artist}} - {{.track_title}}\nProvider: {{.provider}}"

  - name: "Enrichment Throughput"
    description: "Track enrichment rate over time"
    query: |
      {service="metadata-enrichment"}
      | json
      | action="completed"
      | count_over_time($__interval)

  - name: "API Response Times P95"
    description: "95th percentile API response times"
    query: |
      {service="api-gateway-internal"}
      | json
      | response_time!=""
      | unwrap response_time
      | quantile_over_time(0.95, $__interval) by (provider)

# Query Templates (use with variables)
query_templates:
  - name: "Track Enrichment Journey"
    description: "Follow a specific track through the enrichment pipeline"
    query_template: |
      {service=~".*"}
      | json
      | track_id="{{ track_id }}"
      | line_format "{{.timestamp}} [{{.service}}] {{.action}}: {{.message}}"

  - name: "Provider Performance Comparison"
    description: "Compare performance across all providers"
    query_template: |
      {service="api-gateway-internal"}
      | json
      | provider="{{ provider }}"
      | unwrap response_time
      | quantile_over_time(0.95, $__interval)

# Common filters and patterns
filters:
  error_levels:
    - level="error"
    - level="critical"
    - level="warning"

  enrichment_stages:
    - action="ingested"
    - action="enriched"
    - action="promoted"
    - action="materialized"

  api_statuses:
    - status="success"
    - status="error"
    - status="rate_limited"
    - status="timeout"
