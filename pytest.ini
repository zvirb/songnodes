[tool:pytest]
# Pytest configuration for SongNodes project

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Minimum Python version
minversion = 7.0

# Add current directory to Python path
addopts = 
    --strict-markers
    --strict-config
    --disable-warnings
    --tb=short
    --cov-report=term-missing
    --cov-report=html:tests/reports/coverage-html
    --cov-report=xml:tests/reports/coverage.xml
    --junitxml=tests/reports/junit.xml
    --html=tests/reports/pytest-report.html
    --self-contained-html

# Coverage settings
cov_config = .coveragerc

# Test markers
markers =
    unit: Unit tests
    integration: Integration tests
    performance: Performance tests
    e2e: End-to-end tests
    security: Security tests
    slow: Slow running tests (>30 seconds)
    external: Tests requiring external services
    browser: Tests requiring browser automation
    database: Tests requiring database
    redis: Tests requiring Redis
    api: API endpoint tests
    scraper: Scraper-specific tests
    auth: Authentication/authorization tests
    regression: Regression tests
    smoke: Smoke tests for basic functionality

# Asyncio settings
asyncio_mode = auto

# Test timeouts
timeout = 300
timeout_method = thread

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:scrapy.*
    ignore::UserWarning:requests.*

# Log configuration
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests/reports/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d: %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Test selection
# Run fast tests by default, exclude slow tests
deselect_markers = slow

# Parallel execution
# Note: Enable with -n auto when using pytest-xdist
# addopts = -n auto

# Mock settings
mock_use_standalone_module = true

# Doctest configuration
doctest_optionflags = NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL

# Collect ignore
collect_ignore = [
    "tests/reports",
    "tests/fixtures",
    "tests/utils/__pycache__",
    "docs",
    "build",
    "dist",
    ".eggs"