# MusicDB Environment Configuration
# Copy this file to .env and update with your actual values

# =======================
# Database Configuration
# =======================
POSTGRES_PASSWORD=your_secure_postgres_password_here
POSTGRES_USER=musicdb_user
POSTGRES_DB=musicdb

# =======================
# Redis Configuration
# =======================
REDIS_PASSWORD=your_redis_password_here

# =======================
# RabbitMQ Configuration
# =======================
RABBITMQ_USER=musicdb
RABBITMQ_PASS=your_rabbitmq_password_here

# =======================
# API Security
# =======================
JWT_SECRET=your_very_long_random_jwt_secret_key_here
API_KEY=your_api_key_here

# =======================
# External API Keys
# =======================
# Setlist.fm API (https://api.setlist.fm/docs/1.0/index.html)
SETLISTFM_API_KEY=your_setlistfm_api_key_here

# Reddit API (https://www.reddit.com/prefs/apps)
REDDIT_CLIENT_ID=your_reddit_client_id_here
REDDIT_CLIENT_SECRET=your_reddit_client_secret_here
REDDIT_USER_AGENT=MusicDB-Scraper/1.0

# Spotify API (optional - for enhanced metadata)
SPOTIFY_CLIENT_ID=your_spotify_client_id_here
SPOTIFY_CLIENT_SECRET=your_spotify_client_secret_here

# Apple Music API (optional)
APPLE_MUSIC_KEY_ID=your_apple_music_key_id_here
APPLE_MUSIC_TEAM_ID=your_apple_music_team_id_here
APPLE_MUSIC_PRIVATE_KEY=your_apple_music_private_key_here

# =======================
# Monitoring Configuration
# =======================
GRAFANA_USER=admin
GRAFANA_PASSWORD=your_grafana_password_here

# =======================
# Object Storage (MinIO)
# =======================
MINIO_ROOT_USER=minioadmin
MINIO_ROOT_PASSWORD=your_minio_password_here

# =======================
# Application Settings
# =======================
# Environment: development, staging, production
ENVIRONMENT=development

# Enable GraphQL Playground (set to false in production)
ENABLE_PLAYGROUND=true

# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# =======================
# Scraping Configuration
# =======================
# Default concurrent requests per scraper
CONCURRENT_REQUESTS=8

# Default download delay between requests (seconds)
DOWNLOAD_DELAY=1

# User agent for scrapers
USER_AGENT=MusicDB-Scraper/1.0 (+https://github.com/yourusername/musicdb)

# Proxy configuration (optional)
# HTTP_PROXY=http://proxy.example.com:8080
# HTTPS_PROXY=https://proxy.example.com:8080

# =======================
# Rate Limiting
# =======================
# API rate limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS=100
RATE_LIMIT_WINDOW=60

# =======================
# Database Connection Pool
# =======================
DB_POOL_SIZE=20
DB_MAX_OVERFLOW=40
DB_POOL_TIMEOUT=30

# =======================
# Cache Configuration
# =======================
CACHE_TTL=3600
CACHE_MAX_SIZE=1000

# =======================
# SSL/TLS Configuration (Production)
# =======================
SSL_CERT_PATH=/etc/ssl/certs/musicdb.crt
SSL_KEY_PATH=/etc/ssl/private/musicdb.key
SSL_ENABLED=false

# =======================
# Backup Configuration
# =======================
BACKUP_ENABLED=true
BACKUP_RETENTION_DAYS=30
BACKUP_S3_BUCKET=musicdb-backups

# =======================
# Feature Flags
# =======================
ENABLE_WEBSOCKET=true
ENABLE_GRAPHQL_SUBSCRIPTIONS=true
ENABLE_CACHE=true
ENABLE_MONITORING=true

# =======================
# Notification Settings
# =======================
# Slack webhook for alerts
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL

# Email notifications
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your_email@gmail.com
SMTP_PASSWORD=your_email_password
ALERT_EMAIL=alerts@yourdomain.com