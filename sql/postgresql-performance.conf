# PostgreSQL Performance Configuration for MusicDB
# Optimized for 20,000+ tracks/hour processing
# Target: <50ms average query time, <100ms API response times

# =======================
# MEMORY SETTINGS
# =======================

# Shared memory buffer (25% of available RAM for dedicated DB server)
shared_buffers = 2GB

# Working memory for each operation (sort, hash join, etc.)
work_mem = 32MB

# Maintenance work memory for VACUUM, CREATE INDEX, etc.
maintenance_work_mem = 512MB

# Effective cache size (helps planner estimate available OS cache)
effective_cache_size = 6GB

# Temporary file handling
temp_file_limit = 2GB

# =======================
# WRITE AHEAD LOGGING (WAL)
# =======================

# WAL buffer size for high write workloads
wal_buffers = 64MB

# WAL segment size and checkpointing
max_wal_size = 4GB
min_wal_size = 1GB

# Checkpoint settings for balanced performance
checkpoint_completion_target = 0.9
checkpoint_timeout = 15min

# WAL write timing
wal_writer_delay = 200ms
commit_delay = 0

# =======================
# CONNECTION POOLING
# =======================

# Maximum number of connections
max_connections = 200

# Connection pooling preparation
shared_preload_libraries = 'pg_stat_statements'

# =======================
# QUERY PLANNING
# =======================

# Cost-based optimizer settings
random_page_cost = 1.1  # SSD-optimized
seq_page_cost = 1.0
cpu_tuple_cost = 0.01
cpu_index_tuple_cost = 0.005
cpu_operator_cost = 0.0025

# Join algorithm preferences
enable_nestloop = on
enable_hashjoin = on
enable_mergejoin = on

# =======================
# BACKGROUND PROCESSES
# =======================

# Background writer settings for high write loads
bgwriter_delay = 200ms
bgwriter_lru_maxpages = 100
bgwriter_lru_multiplier = 2.0

# Autovacuum settings for high-volume inserts
autovacuum = on
autovacuum_max_workers = 6
autovacuum_naptime = 30s
autovacuum_vacuum_threshold = 50
autovacuum_vacuum_scale_factor = 0.1
autovacuum_analyze_threshold = 50
autovacuum_analyze_scale_factor = 0.05

# =======================
# LOCKS & TIMEOUTS
# =======================

# Lock timeout for long-running queries
lock_timeout = 30s
statement_timeout = 60s
idle_in_transaction_session_timeout = 30s

# Deadlock detection
deadlock_timeout = 1s

# =======================
# LOGGING & MONITORING
# =======================

# Query logging for performance analysis
log_min_duration_statement = 100ms
log_statement = 'mod'
log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '

# Statistics collection
track_activities = on
track_counts = on
track_io_timing = on
track_functions = all

# Log slow queries and their plans
log_checkpoints = on
log_lock_waits = on
log_temp_files = 32MB

# =======================
# PARALLEL PROCESSING
# =======================

# Parallel query execution
max_parallel_workers = 8
max_parallel_workers_per_gather = 4
max_parallel_maintenance_workers = 4
parallel_tuple_cost = 0.1
parallel_setup_cost = 1000.0

# =======================
# JSONB OPTIMIZATION
# =======================

# GIN index optimization for JSONB columns
gin_fuzzy_search_limit = 0
gin_pending_list_limit = 16MB

# =======================
# FULL-TEXT SEARCH
# =======================

# Text search configuration
default_text_search_config = 'pg_catalog.english'

# =======================
# REPLICATION & BACKUP
# =======================

# WAL archiving for backup and replication
archive_mode = on
archive_command = 'test ! -f /var/lib/postgresql/archive/%f && cp %p /var/lib/postgresql/archive/%f'
wal_level = replica

# Hot standby settings
hot_standby = on
max_standby_streaming_delay = 30s

# =======================
# TIMEZONE & LOCALE
# =======================

timezone = 'UTC'
lc_messages = 'en_US.UTF-8'
lc_monetary = 'en_US.UTF-8'
lc_numeric = 'en_US.UTF-8'
lc_time = 'en_US.UTF-8'

# =======================
# EXTENSIONS
# =======================

# Ensure required extensions are loaded
shared_preload_libraries = 'pg_stat_statements,pg_trgm'