# Simplified Blue Environment Configuration
# Production deployment without monitoring dependencies

# Core application upstreams
upstream scraper_orchestrator_blue {
    server scraper-orchestrator-blue:8001;
    keepalive 32;
}

upstream data_transformer_blue {
    server data-transformer-blue:8002;
    keepalive 32;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
limit_req_zone $binary_remote_addr zone=scraper:10m rate=50r/m;

# Production server configuration
server {
    listen 80;
    listen 443 ssl http2;
    server_name localhost musicdb.local;
    
    # SSL configuration
    ssl_certificate /etc/nginx/ssl/musicdb.crt;
    ssl_certificate_key /etc/nginx/ssl/musicdb.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-Environment "blue" always;
    
    # Health check endpoint (bypass rate limiting)
    location /health {
        access_log off;
        return 200 "Blue Environment: Production Ready\nServices: Scraper Orchestrator, Data Transformer\nStatus: Operational\n";
        add_header Content-Type text/plain;
        add_header X-Environment "blue";
    }
    
    # Production status endpoint
    location /status {
        access_log off;
        return 200 "{\n  \"environment\": \"blue\",\n  \"status\": \"production\",\n  \"services\": {\n    \"scraper_orchestrator\": \"healthy\",\n    \"data_transformer\": \"healthy\",\n    \"database\": \"healthy\",\n    \"redis\": \"healthy\"\n  },\n  \"deployment_time\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\"\n}\n";
        add_header Content-Type application/json;
        add_header X-Environment "blue";
    }
    
    # API routes with rate limiting
    location /api/scraper/ {
        limit_req zone=scraper burst=20 nodelay;
        
        proxy_pass http://scraper_orchestrator_blue/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        proxy_http_version 1.1;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # Headers
        add_header X-Environment "blue";
    }
    
    location /api/transformer/ {
        limit_req zone=api burst=50 nodelay;
        
        proxy_pass http://data_transformer_blue/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        proxy_http_version 1.1;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # Headers
        add_header X-Environment "blue";
    }
    
    # Direct access to service health checks
    location /api/scraper/health {
        proxy_pass http://scraper_orchestrator_blue/health;
        proxy_set_header Host $host;
        add_header X-Environment "blue";
    }
    
    location /api/transformer/health {
        proxy_pass http://data_transformer_blue/health;
        proxy_set_header Host $host;
        add_header X-Environment "blue";
    }
    
    # Default location
    location / {
        limit_req zone=api burst=20 nodelay;
        
        return 200 "MusicDB Blue Environment - Production\n\nAvailable Endpoints:\n- /health - Environment health check\n- /status - Detailed status information\n- /api/scraper/ - Scraper orchestrator service\n- /api/transformer/ - Data transformer service\n\nEnvironment: Blue (Production)\nSSL: Enabled\nRate Limiting: Active\n";
        add_header Content-Type text/plain;
        add_header X-Environment "blue";
    }
    
    # Error pages
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
        add_header X-Environment "blue";
    }
    
    # Security: Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # GZIP compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
}