# High-Performance Nginx Configuration with Security Hardening
# Optimized for MusicDB API Gateway with SSL/TLS termination

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Security: Limit worker connections and file descriptors
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

http {
    # Basic Settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Security Headers
    server_tokens off;
    # Note: more_clear_headers requires nginx-extras or headers-more module
    # Using proxy_hide_header instead for compatibility
    
    # Performance Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    client_body_timeout 60;
    client_header_timeout 60;
    send_timeout 60;
    
    # Buffer Settings (Security + Performance)
    client_body_buffer_size 128k;
    client_max_body_size 10m;
    client_header_buffer_size 3m;
    large_client_header_buffers 4 256k;
    
    # Gzip Configuration
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml;
    
    # Rate Limiting Zones
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=1r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=5r/s;
    
    # Connection Limiting
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;
    
    # Security: Hide Nginx version
    server_tokens off;
    
    # Logging Format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    log_format security '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       '"$http_x_real_ip" "$scheme" "$server_protocol"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    
    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # Security Headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Content Security Policy for API
    add_header Content-Security-Policy "default-src 'none'; frame-ancestors 'none';" always;
    
    # Upstream Configurations
    # Docker DNS resolver (allows runtime DNS resolution)
    resolver 127.0.0.11 valid=30s ipv6=off;

    upstream api_gateway {
        least_conn;
        server api-gateway:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream grafana {
        server grafana:3000 max_fails=2 fail_timeout=30s;
    }

    # Kibana upstream removed - service not deployed
    # upstream kibana {
    #     server logging-kibana:5601 max_fails=2 fail_timeout=30s;
    # }
    
    # Maps for security
    map $http_user_agent $blocked_agent {
        ~*malicious 1;
        ~*bot 1;
        ~*crawler 1;
        ~*scanner 1;
        default 0;
    }
    
    map $request_method $blocked_method {
        TRACE 1;
        default 0;
    }
    
    # Default server block (catch-all)
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        
        # Security: Block malicious requests
        if ($blocked_agent) {
            return 444;
        }
        
        if ($blocked_method) {
            return 405;
        }
        
        # Redirect all HTTP to HTTPS
        return 301 https://$host$request_uri;
    }
    
    # Main HTTPS Server Block
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name localhost musicdb.local api.musicdb.local;
        
        # SSL Certificate Configuration
        ssl_certificate /etc/nginx/ssl/musicdb.crt;
        ssl_certificate_key /etc/nginx/ssl/musicdb.key;
        ssl_trusted_certificate /etc/nginx/ssl/musicdb-chain.crt;
        
        # SSL Configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305;
        
        # DH Parameters for Forward Secrecy
        ssl_dhparam /etc/nginx/ssl/dhparam.pem;
        
        # Connection Limits
        limit_conn perip 10;
        limit_conn perserver 100;
        
        # Security Headers (additional to global)
        add_header X-Correlation-ID $request_id always;
        
        # Health Check Endpoint (no rate limiting)
        location /health {
            access_log off;
            proxy_pass http://api_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
        }
        
        # Authentication endpoints (strict rate limiting)
        location ~* ^/api/auth/(login|register|refresh) {
            limit_req zone=auth burst=3 nodelay;
            limit_req_status 429;
            
            proxy_pass http://api_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Security
            proxy_hide_header X-Powered-By;
            proxy_hide_header Server;
        }
        
        # API endpoints (moderate rate limiting)
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            limit_req_status 429;
            
            proxy_pass http://api_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            # Enable buffering for better performance
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Security
            proxy_hide_header X-Powered-By;
            proxy_hide_header Server;
        }
        
        # WebSocket Support
        location /api/v1/ws {
            proxy_pass http://api_gateway;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket timeouts
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
        }
        
        # Monitoring endpoints (restricted access)
        location /monitoring/ {
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
            
            rewrite ^/monitoring/grafana(/.*)$ $1 break;
            proxy_pass http://grafana;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Kibana logs location disabled - service not deployed
        # location /logs/ {
        #     allow 127.0.0.1;
        #     allow 10.0.0.0/8;
        #     allow 172.16.0.0/12;
        #     allow 192.168.0.0/16;
        #     deny all;
        #
        #     rewrite ^/logs/kibana(/.*)$ $1 break;
        #     proxy_pass http://kibana;
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        # }
        
        # Static content (if any)
        location /static/ {
            root /usr/share/nginx/html;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
        }
        
        # Security: Block common attack patterns
        location ~* \.(env|git|svn|htaccess|htpasswd)$ {
            return 404;
        }
        
        location ~* \.(sql|bak|backup|log)$ {
            return 404;
        }
        
        # Security: Block suspicious requests
        location ~* /(config|admin|phpmyadmin|wp-admin) {
            return 404;
        }
        
        # Default location (fallback)
        location / {
            limit_req zone=general burst=10 nodelay;
            
            proxy_pass http://api_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
        }
        
        # Custom error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
    
    # Include additional configurations
    include /etc/nginx/conf.d/*.conf;
}