# Health Check Configuration Override
# Apply with: docker compose -f docker-compose.yml -f docker-compose.healthcheck.yml up -d

services:
  # Frontend health check fix
  frontend:
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health", "||", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # API Gateway health check fix
  api-gateway:
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # REST API health check
  rest-api:
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s

  # WebSocket API health check
  websocket-api:
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/health", "-H", "Upgrade: websocket"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s

  # GraphQL API health check
  graphql-api:
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s

  # Graph Visualization API health check
  graph-visualization-api:
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s

  # Enhanced Visualization Service health check
  enhanced-visualization-service:
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s

  # Database Connection Pool health check
  db-connection-pool:
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "localhost", "-p", "6432", "-U", "postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # PostgreSQL health check
  postgres:
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres && psql -U postgres -c 'SELECT 1' > /dev/null 2>&1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Redis health check
  redis:
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # RabbitMQ health check
  rabbitmq:
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Nginx Load Balancer health check
  nginx-load-balancer:
    healthcheck:
      test: ["CMD", "service", "nginx", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro  # Mount frontend config