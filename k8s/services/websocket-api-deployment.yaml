---
apiVersion: v1
kind: Service
metadata:
  name: websocket-api-service
  namespace: songnodes
  labels:
    app.kubernetes.io/name: websocket-api
    app.kubernetes.io/component: backend
spec:
  type: ClusterIP
  ports:
    - port: 8083
      targetPort: 8083
      protocol: TCP
      name: websocket
    - port: 9090
      targetPort: 9090
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: websocket-api
  sessionAffinity: ClientIP  # Important for WebSocket connections
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: websocket-api
  namespace: songnodes
  labels:
    app.kubernetes.io/name: websocket-api
    app.kubernetes.io/component: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: websocket-api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: websocket-api
        app.kubernetes.io/component: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
      containers:
        - name: websocket-api
          image: songnodes/websocket-api:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8083
              name: websocket
            - containerPort: 9090
              name: metrics
          env:
            - name: RABBITMQ_HOST
              valueFrom:
                configMapKeyRef:
                  name: songnodes-config
                  key: RABBITMQ_HOST
            - name: RABBITMQ_PORT
              valueFrom:
                configMapKeyRef:
                  name: songnodes-config
                  key: RABBITMQ_PORT
            - name: RABBITMQ_USER
              valueFrom:
                configMapKeyRef:
                  name: songnodes-config
                  key: RABBITMQ_USER
            - name: RABBITMQ_PASS
              valueFrom:
                secretKeyRef:
                  name: songnodes-secrets
                  key: RABBITMQ_PASS
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: songnodes-config
                  key: REDIS_HOST
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: songnodes-secrets
                  key: REDIS_PASSWORD
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /health
              port: 8083
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 8083
            initialDelaySeconds: 10
            periodSeconds: 5