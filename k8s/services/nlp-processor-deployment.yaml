---
apiVersion: v1
kind: Service
metadata:
  name: nlp-processor-service
  namespace: songnodes
  labels:
    app.kubernetes.io/name: nlp-processor
    app.kubernetes.io/component: backend
spec:
  type: ClusterIP
  ports:
    - port: 8086
      targetPort: 8086
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: nlp-processor
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nlp-processor
  namespace: songnodes
  labels:
    app.kubernetes.io/name: nlp-processor
    app.kubernetes.io/component: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: nlp-processor
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nlp-processor
        app.kubernetes.io/component: backend
    spec:
      initContainers:
        - name: download-models
          image: songnodes/nlp-processor:latest
          command: ["python", "download_models.py"]
          volumeMounts:
            - name: spacy-models
              mountPath: /root/.cache/spacy
      containers:
        - name: nlp-processor
          image: songnodes/nlp-processor:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8086
              name: http
          env:
            - name: ANTHROPIC_API_KEY
              valueFrom:
                secretKeyRef:
                  name: songnodes-secrets
                  key: ANTHROPIC_API_KEY
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: songnodes-config
                  key: POSTGRES_HOST
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: songnodes-secrets
                  key: POSTGRES_PASSWORD
          volumeMounts:
            - name: spacy-models
              mountPath: /root/.cache/spacy
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "2000m"
          livenessProbe:
            httpGet:
              path: /health
              port: 8086
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /health
              port: 8086
            initialDelaySeconds: 30
            periodSeconds: 10
      volumes:
        - name: spacy-models
          emptyDir: {}