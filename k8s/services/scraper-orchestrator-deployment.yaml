---
apiVersion: v1
kind: Service
metadata:
  name: scraper-orchestrator-service
  namespace: songnodes
  labels:
    app.kubernetes.io/name: scraper-orchestrator
    app.kubernetes.io/component: scraper
spec:
  type: ClusterIP
  ports:
    - port: 8085
      targetPort: 8085
      protocol: TCP
      name: http
    - port: 9090
      targetPort: 9090
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: scraper-orchestrator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scraper-orchestrator
  namespace: songnodes
  labels:
    app.kubernetes.io/name: scraper-orchestrator
    app.kubernetes.io/component: scraper
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: scraper-orchestrator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: scraper-orchestrator
        app.kubernetes.io/component: scraper
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
      containers:
        - name: scraper-orchestrator
          image: songnodes/scraper-orchestrator:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8085
              name: http
            - containerPort: 9090
              name: metrics
          envFrom:
            - configMapRef:
                name: songnodes-config
            - secretRef:
                name: songnodes-secrets
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "1000m"
          livenessProbe:
            httpGet:
              path: /health
              port: 8085
            initialDelaySeconds: 30
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8085
            initialDelaySeconds: 15
            periodSeconds: 10
---
# Individual scraper jobs (CronJob pattern for scheduled scraping)
apiVersion: batch/v1
kind: CronJob
metadata:
  name: scraper-1001tracklists
  namespace: songnodes
  labels:
    app.kubernetes.io/name: scraper
    app.kubernetes.io/component: scraper
    scraper.type: 1001tracklists
spec:
  schedule: "0 */6 * * *"  # Every 6 hours
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: scraper
            scraper.type: 1001tracklists
        spec:
          restartPolicy: OnFailure
          containers:
            - name: scraper-1001
              image: songnodes/scraper-1001:latest
              imagePullPolicy: Always
              envFrom:
                - configMapRef:
                    name: songnodes-config
                - secretRef:
                    name: songnodes-secrets
              resources:
                requests:
                  memory: "512Mi"
                  cpu: "250m"
                limits:
                  memory: "1Gi"
                  cpu: "1000m"